apply plugin: 'kotlin'

group = 'tororo1066'
version = '1.0-SNAPSHOT'

sourceCompatibility = '16'
targetCompatibility = '16'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url 'https://repo1.maven.org/maven2/'
    }
    maven {
        name = 'Lumine Releases'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }

}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly 'com.elmakers.mine.bukkit:MagicAPI:10.2'
    compileOnly "io.lumine.xikage:MythicMobs:4.11.0"
    compileOnly 'org.spigotmc:spigot:1.17.1-R0.1-SNAPSHOT'
    compileOnly fileTree(dir: 'libs', include: '*.jar')
    compile 'com.github.tororo1066:TororoPluginAPI:03d75884be'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0"
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}
buildscript {
    ext.kotlin_version = '1.4.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
repositories {
    maven { url 'https://jitpack.io' }
}
dependencies {
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}